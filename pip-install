#!/bin/bash
# DOH Pip Installation Script
# Quick installer for DOH from PyPI
# Can be run with: curl -sSL https://raw.githubusercontent.com/youruser/doh/main/pip-install | bash

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
BOLD='\033[1m'
NC='\033[0m'

print_step() {
    echo -e "${BLUE}${BOLD}==> $1${NC}"
}

print_success() {
    echo -e "${GREEN}✓ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠ $1${NC}"
}

print_error() {
    echo -e "${RED}✗ $1${NC}"
    exit 1
}

# Configuration
LOCAL_BIN="$HOME/.local/bin"

echo -e "${BOLD}DOH Quick Install from PyPI${NC}"
echo "Installing DOH (Directory Oh-no, Handle this!) from PyPI"
echo

print_step "Checking requirements"

# Check for Python 3
if ! command -v python3 &> /dev/null; then
    print_error "Python 3 is required but not installed"
fi

# Check for pip
if ! command -v pip3 &> /dev/null; then
    print_error "pip3 is required but not installed"
fi

# Check for git
if ! command -v git &> /dev/null; then
    print_error "git is required but not installed"
fi

print_success "All requirements met"

print_step "Creating user directories"
mkdir -p "$LOCAL_BIN"
print_success "Created directories"

print_step "Installing DOH from PyPI"
pip3 install --user doh-monitor
print_success "DOH installed from PyPI"

print_step "Checking PATH configuration"
if [[ ":$PATH:" == *":$LOCAL_BIN:"* ]]; then
    print_success "~/.local/bin is already in PATH"
else
    print_warning "~/.local/bin is not in your PATH"
    echo
    echo "To use 'doh' from anywhere, add this line to your shell profile:"
    echo
    
    if [[ "$SHELL" == *"zsh"* ]]; then
        echo "  echo 'export PATH=\"\$HOME/.local/bin:\$PATH\"' >> ~/.zshrc"
        echo "  source ~/.zshrc"
    elif [[ "$SHELL" == *"bash"* ]]; then
        echo "  echo 'export PATH=\"\$HOME/.local/bin:\$PATH\"' >> ~/.bashrc"
        echo "  source ~/.bashrc"
    else
        echo "  export PATH=\"\$HOME/.local/bin:\$PATH\""
        echo "  (Add this to your shell's configuration file)"
    fi
    echo
fi

print_step "Setting up user-level systemd daemon"
if command -v systemctl &> /dev/null; then
    USER_SYSTEMD_DIR="$HOME/.config/systemd/user"
    mkdir -p "$USER_SYSTEMD_DIR"
    
    # Create the service file
    cat > "$USER_SYSTEMD_DIR/doh-monitor.service" << EOF
[Unit]
Description=DOH Git Repository Monitor
After=graphical-session.target

[Service]
Type=oneshot
ExecStart=$LOCAL_BIN/doh daemon --once
Environment=HOME=$HOME
WorkingDirectory=$HOME

[Install]
WantedBy=default.target
EOF
    
    # Create the timer file
    cat > "$USER_SYSTEMD_DIR/doh-monitor.timer" << EOF
[Unit]
Description=Run DOH Git Repository Monitor every 10 minutes
Requires=doh-monitor.service

[Timer]
OnCalendar=*:0/10
Persistent=true

[Install]
WantedBy=timers.target
EOF
    
    systemctl --user daemon-reload
    systemctl --user enable doh-monitor.timer
    systemctl --user start doh-monitor.timer
    
    print_success "User-level daemon configured and started"
else
    print_warning "systemd not available. You can set up cron manually if needed."
fi

print_step "Testing installation"
if "$LOCAL_BIN/doh" --version &> /dev/null; then
    print_success "Installation test passed"
elif command -v doh &> /dev/null; then
    print_success "Installation test passed (doh in PATH)"
else
    print_warning "Command 'doh' not found in PATH. Make sure ~/.local/bin is in your PATH"
fi

echo
echo -e "${GREEN}${BOLD}DOH installation completed successfully!${NC}"
echo
echo "DOH is now installed from PyPI and ready to use!"
echo
echo "Quick start:"
echo "  doh --help"
echo "  doh add"
echo "  doh status"
echo
echo "Configuration will be stored in ~/.doh/"
echo
if command -v systemctl &> /dev/null; then
    echo -e "${GREEN}${BOLD}User daemon is now running and monitoring every 10 minutes!${NC}"
    echo
    echo "To check daemon status:"
    echo "  systemctl --user status doh-monitor.timer"
fi
echo
echo "To uninstall:"
echo "  pip3 uninstall doh-monitor"
if command -v systemctl &> /dev/null; then
    echo "  systemctl --user stop doh-monitor.timer"
    echo "  systemctl --user disable doh-monitor.timer"
fi
